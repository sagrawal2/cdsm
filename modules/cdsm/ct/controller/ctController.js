(function () {
    'use strict';
    cdsmApp.controller('ctController', function ctController($scope, globalService, commonService, helperService, $rootScope, $timeout,$localStorage) {

        $scope.diagramMode = "expand";

        $rootScope.$broadcast('pageLoaded', { pageName: "Call Trace", shortName: "ct" });
        var icons = {};
        var callTraceData;
        var ctDiagram;

        loadDefault();
        
        $timeout(init, 100);
        $scope.diagramFullScreen = diagramFullScreen;


        $timeout(setDiagramheight, 1000);

        function setDiagramheight() {
            //alert('Window Height:' + $(window).height() + " Window width:" + $(window).width() + " Document Height:" + $(document).height() + " Document Width:" + $(document).width() + 'Header:' + $("#cdsmHeader").height() + " Content:" + $("#cdsmContent").height() + " Footer:" + $("#cdsmFooter").height() + " Diagram:" + $("#networkDiagramDiv").height() + " Dashboard Top:" + $("#dashboardTop").height());
            $("#ctDiagramDiv").height($("#cdsmContent").height() - $("#ctSearch").height()- $("#ctDetail").height() - 77 + 30);
        }

        function diagramFullScreen(mode) {
            try {
                var ctDetailHeight = $("#ctDetail").height();
                var ctSearchHeight = $("#ctSearch").height();
                if (mode == 'expand') {
                    $scope.diagramMode = 'compress';
                    $("#ctDetail").hide();
                    $("#ctSearch").hide();
                    $("#ctDiagramDiv").height($("#ctDiagramDiv").height() + ctDetailHeight + ctSearchHeight);
                    //$("#testdiv").height($("#ctDiagramDiv").height());
                    //$("#ctDiagramDiv").scroll();
                }
                if (mode == 'compress') {
                    $scope.diagramMode = 'expand';
                    $("#ctDetail").show();
                    $("#ctSearch").show();
                    $("#ctDiagramDiv").height($("#ctDiagramDiv").height() - ctDetailHeight - ctSearchHeight);
                    //$("#testdiv").height($("#ctDiagramDiv").height());
                    //$("#ctDiagramDiv").hide().fadeIn('fast');
                    //$("#ctDiagramDiv").trigger('resize');
                }
                ctDiagram.requestUpdate(); 
            } catch (e) {
                alert(e);
            }
        }




        function loadDefault()
        {
            loadCallTraceSampleData();
        }

        $scope.$on('onDateChangeEvent', function () {
            //$scope.selectedDate = globalService.getSelectedDate();
            //$scope.$apply();
        });

        $scope.getJSON = getJSON;
        $scope.setJSON = setJSON;


        function getJSON() {
            //var JsonObject = graph.toJSON();
            //var JSonString = JSON.stringify(JsonObject);
            $("#mySavedModel").val(ctDiagram.model.toJson());
        }

        function setJSON() {
            ctDiagram.model = go.Model.fromJson(document.getElementById("mySavedModel").value);
        }

        

        $scope.test = function () {
            setDiagramModelFromMetadata();
        }

        function setDiagramModelFromMetadata() {
            try {
                var currentIMSI = globalService.getCurrentIMSI();

                var callTraceModel = $.grep(callTraceData, function (e) { return e.id == currentIMSI.id });

                if (callTraceModel != null && callTraceModel.length > 0)
                {
                    $scope.callTraceModel = callTraceModel[0];
                }
                else
                {
                    $scope.callTraceModel = callTraceData[0];
                }
                

                

                //$scope.$apply();

                var jsonModel = $scope.callTraceModel.diagramJSON;
                var durationLength = jsonModel.length * 1.5;


                var diaJSONModel =

             {
                 nodeDataArray: [
                 { "key": "UE", "text": "UE", "isGroup": true, "icon": "UE", "iconWidth": 20, "iconHeight": 30, "loc": "0 0", "duration": durationLength },
                 { "key": "eNB", "text": "eNB", "isGroup": true, "icon": "eNodeB", "iconWidth": 20, "iconHeight": 30, "loc": "93 0", "duration": durationLength },
                 { "key": "MME", "text": "MME", "isGroup": true, "icon": "server3", "iconWidth": 20, "iconHeight": 30, "loc": "186 0", "duration": durationLength },
                 { "key": "SGW", "text": "SGW", "isGroup": true, "icon": "server", "iconWidth": 20, "iconHeight": 30, "loc": "279 0", "duration": durationLength },
                 { "key": "PGW", "text": "PGW", "isGroup": true, "icon": "server", "iconWidth": 20, "iconHeight": 30, "loc": "372 0", "duration": durationLength },
                 { "key": "PCRF", "text": "PCRF", "isGroup": true, "icon": "cylinder", "iconWidth": 20, "iconHeight": 30, "loc": "465 0", "duration": durationLength },
                 { "key": "PCSCF", "text": "PCSCF", "isGroup": true, "icon": "server3", "iconWidth": 20, "iconHeight": 30, "loc": "558 0", "duration": durationLength },
                 { "key": "ICSCF", "text": "ICSCF", "isGroup": true, "icon": "server3", "iconWidth": 20, "iconHeight": 30, "loc": "651 0", "duration": durationLength },
                 { "key": "SCSCF", "text": "SCSCF", "isGroup": true, "icon": "server3", "iconWidth": 20, "iconHeight": 30, "loc": "744 0", "duration": durationLength },
                 { "key": "HSS", "text": "HSS", "isGroup": true, "icon": "cylinder", "iconWidth": 20, "iconHeight": 30, "loc": "837 0", "duration": durationLength },
                 { "key": "MSS", "text": "MSS", "isGroup": true, "icon": "cylinder", "iconWidth": 20, "iconHeight": 30, "loc": "930 0", "duration": durationLength },
                 { "key": "ATCF", "text": "ATCF", "isGroup": true, "icon": "cylinder", "iconWidth": 20, "iconHeight": 30, "loc": "1023 0", "duration": durationLength }

                 //{ "group": "UE", "start": 0, "duration": 1},
                 //{ "group": "MME", "start": 1, "duration": 1},
                 //{ "group": "SGW", "start": 2, "duration": 1},
                 //{ "group": "PGW", "start": 3, "duration": 1},
                 //{ "group": "SGW", "start": 4, "duration": 1},
                 //{ "group": "MME", "start": 5, "duration": 2 },
                 //{ "group": "SGW", "start": 7, "duration": 2},
                 //{ "group": "MME", "start": 9, "duration": 2},
                 //{ "group": "SGW", "start": 11, "duration": 2 },
                 //{ "group": "PGW", "start": 13, "duration": 2 },
                 //{ "group": "PCRF", "start": 15, "duration": 2},
                 //{ "group": "PGW", "start": 17, "duration": 2}
                 ],
                 linkDataArray: [
                 //{ "from": "UE", "to": "MME", "text": "Create Session Request Tes", "time": 1 },
                 //{ "from": "MME", "to": "SGW", "text": "Create Session Request sdfdsfdfdsfsd", "time": 2 },
                 //{ "from": "SGW", "to": "PGW", "text": "Create Session Request", "time": 3 },
                 //{ "from": "PGW", "to": "SGW", "text": "Create Session Response asdf", "time": 4 },
                 //{ "from": "SGW", "to": "MME", "text": "Create Session Response", "time": 5 },
                 //{ "from": "MME", "to": "SGW", "text": "Modify Bearer Request", "time": 7 },
                 //{ "from": "SGW", "to": "MME", "text": "Modify Bearer Response", "time": 9 },
                 //{ "from": "MME", "to": "SGW", "text": "Create Session Request", "time": 11 },
                 //{ "from": "SGW", "to": "PGW", "text": "Create Session Request", "time": 13 },
                 //{ "from": "PGW", "to": "PCRF", "text": "Create Session Request", "time": 15 },
                 //{ "from": "PCRF", "to": "PGW", "text": "Create Session Request", "time": 17 }
                 ]
             };

                for (var i = 0; i < jsonModel.length; i++) {
                    //diaJSONModel.nodeDataArray.push({ group: jsonModel[i].Source.trim(), start: 2 * i, duration: 2 });
                    diaJSONModel.linkDataArray.push({ from: jsonModel[i].Source.trim(), to: jsonModel[i].Destination.trim(), text: jsonModel[i].Message.trim(), time: (1.5 * i) , color: jsonModel[i].Color.trim() });
                }

                ctDiagram.model = go.Model.fromJson(diaJSONModel);

            } catch (e) {
                alert(e);
            }

        }

       

     
        ////////////// START : Call Flow Diagram  ////////////////////////
        function load() {

            // 
            var jsonModel =
                {
                    "class": "go.GraphLinksModel",
                    "nodeDataArray": [
                    { "key": "UE", "text": "UE", "isGroup": true, "loc": "0 0", "duration": 20 },
                    { "key": "MME", "text": "MME", "isGroup": true, "loc": "200 0", "duration": 20 },
                    { "key": "SGW", "text": "SGW", "isGroup": true, "loc": "400 0", "duration": 20 },
                    { "key": "PGW", "text": "PGW", "isGroup": true, "loc": "600 0", "duration": 20 },
                    { "key": "PCRF", "text": "PCRF", "isGroup": true, "loc": "800 0", "duration": 20 },
                    { "key": "PCSCF", "text": "PCSCF", "isGroup": true, "loc": "1000 0", "duration": 20 },
                    { "key": "SCSCF", "text": "SCSCF", "isGroup": true, "loc": "1200 0", "duration": 20 },

                    { "group": "UE", "start": 0, "duration": 1 },
                    { "group": "MME", "start": 1, "duration": 1 },
                    { "group": "SGW", "start": 2, "duration": 1 },
                    { "group": "PGW", "start": 3, "duration": 1 },
                    { "group": "SGW", "start": 4, "duration": 1 },
                    { "group": "MME", "start": 5, "duration": 2 },
                    { "group": "SGW", "start": 7, "duration": 2 },
                    { "group": "MME", "start": 9, "duration": 2 },
                    { "group": "SGW", "start": 11, "duration": 2 },
                    { "group": "PGW", "start": 13, "duration": 2 },
                    { "group": "PCRF", "start": 15, "duration": 2 },
                    { "group": "PGW", "start": 17, "duration": 2 }


                    ],
                    "linkDataArray": [

                    { "from": "UE", "to": "MME", "text": "Create Session Request", "time": 1 },
                    { "from": "MME", "to": "SGW", "text": "Create Session Request", "time": 2 },
                    { "from": "SGW", "to": "PGW", "text": "Create Session Request", "time": 3 },
                    { "from": "PGW", "to": "SGW", "text": "Create Session Response", "time": 4 },
                    { "from": "SGW", "to": "MME", "text": "Create Session Response", "time": 5 },
                    { "from": "MME", "to": "SGW", "text": "Modify Bearer Request", "time": 7 },
                    { "from": "SGW", "to": "MME", "text": "Modify Bearer Response", "time": 9 },
                    { "from": "MME", "to": "SGW", "text": "Create Session Request", "time": 11 },
                    { "from": "SGW", "to": "PGW", "text": "Create Session Request", "time": 13 },
                    { "from": "PGW", "to": "PCRF", "text": "Create Session Request", "time": 15 },
                    { "from": "PCRF", "to": "PGW", "text": "Create Session Request", "time": 17 }
                    ]
                };

            ctDiagram.model = go.Model.fromJson(jsonModel);
        }

        function init() {
            //alert('hello');
            //return;
            setIconPaths();

            var $ = go.GraphObject.make;

            ctDiagram =
              $(go.Diagram, "ctDiagramDiv", // must be the ID or reference to an HTML DIV
                {
                    initialContentAlignment: go.Spot.Center,
                    allowCopy: false,
                    linkingTool: $(MessagingTool),  // defined below
                    "resizingTool.isGridSnapEnabled": true,
                    "draggingTool.gridSnapCellSize": new go.Size(1, MessageSpacing / 4),
                    "draggingTool.isGridSnapEnabled": true,
                    // automatically extend Lifelines as Activities are moved or resized
                    "SelectionMoved": ensureLifelineHeights,
                    "PartResized": ensureLifelineHeights,
                    "undoManager.isEnabled": true
                });
            // when the document is modified, add a "*" to the title and enable the "Save" button
            ctDiagram.addDiagramListener("Modified", function (e) {
                var button = document.getElementById("SaveButton");
                if (button) button.disabled = !ctDiagram.isModified;
                var idx = document.title.indexOf("*");
                if (ctDiagram.isModified) {
                    if (idx < 0) document.title += "*";
                } else {
                    if (idx >= 0) document.title = document.title.substr(0, idx);
                }
            });
            // define the Lifeline Node template.
            ctDiagram.groupTemplate =
              $(go.Group, "Vertical",
                {
                    locationSpot: go.Spot.Bottom,
                    locationObjectName: "HEADER",
                    minLocation: new go.Point(0, 0),
                    maxLocation: new go.Point(9999, 0),
                    selectionObjectName: "HEADER"
                },
                new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
                $(go.Panel, "Vertical",
                  { name: "HEADER" },
                  $(go.Shape, //"Rectangle",
                    { fill: "#1ab394", stroke: "lightgray", name: 'icon' }
                   , new go.Binding("width", "iconWidth")
                   , new go.Binding("height", "iconHeight")
                    , new go.Binding("geometryString", "icon", geoFunc)
                    ),
                  $(go.TextBlock,
                    {
                        margin: 5,
                        font: "bold 12px open sans",

                    },
                    new go.Binding("text", "text"))
                ),
                $(go.Shape,
                  {
                      figure: "LineV",
                      fill: null,
                      stroke: "lightgray",
                      strokeDashArray: [5, 5],
                      width: 1,
                      alignment: go.Spot.Center,
                      portId: "",
                      fromLinkable: true,
                      fromLinkableDuplicates: true,
                      toLinkable: true,
                      toLinkableDuplicates: true,
                      cursor: "pointer"

                      //figure: "Club",height:10,width:40, strokeDashArray: [10, 10]
                      //geometry: go.Geometry.parse("M 0,0 L 10,50 20,10 30,50 40,0", false), strokeWidth: 2
                  },
                  new go.Binding("height", "duration", computeLifelineHeight)
                  //, new go.Binding("geometryString", "icon", geoFunc)
                  )
              );
            // define the Activity Node template
            ctDiagram.nodeTemplate =
              $(go.Node,
                {
                    locationSpot: go.Spot.Top,
                    locationObjectName: "SHAPE",
                    minLocation: new go.Point(NaN, LinePrefix - ActivityStart),
                    maxLocation: new go.Point(NaN, 19999),
                    selectionObjectName: "SHAPE",
                    resizable: true,
                    resizeObjectName: "SHAPE",
                    resizeAdornmentTemplate:
                      $(go.Adornment, "Spot",
                        $(go.Placeholder),
                        $(go.Shape,  // only a bottom resize handle
                          {
                              alignment: go.Spot.Bottom, cursor: "col-resize",
                              desiredSize: new go.Size(6, 6), fill: "yellow"
                          })
                      )
                },
                new go.Binding("location", "", computeActivityLocation).makeTwoWay(backComputeActivityLocation),
                $(go.Shape, "Rectangle",
                  {
                      name: "SHAPE",
                      fill: "white", stroke: "black",
                      width: ActivityWidth,
                      // allow Activities to be resized down to 1/4 of a time unit
                      minSize: new go.Size(ActivityWidth, computeActivityHeight(0.25))
                  },
                  new go.Binding("height", "duration", computeActivityHeight).makeTwoWay(backComputeActivityHeight))
              );
            // define the Message Link template.
            ctDiagram.linkTemplate =
              $(MessageLink,  // defined below
                {
                    selectionAdorned: true, curviness: 0
                    , toolTip:
                            $(go.Adornment, "Auto",
                              $(go.Shape, { fill: "#EFEFCC" }),
                              $(go.TextBlock, { margin: 4, width: 140 },
                                new go.Binding("text", "text"))
                            )
                },
                $(go.Shape, "Rectangle",
                  { stroke: "green" },
                  new go.Binding("stroke", "color")),
                $(go.Shape,
                  { toArrow: "OpenTriangle", stroke: "black" }, new go.Binding("stroke", "color")),
                $(go.TextBlock,
                  {
                      //segmentIndex: 0,
                      segmentOffset: new go.Point(0, -10),
                      //segmentFraction: 0.5,
                      isMultiline: true,
                      editable: false,
                      font: "10px open sans"
                  },
                  //new go.Binding("text", "text").makeTwoWay())
                  new go.Binding("text", "text"),
                  new go.Binding("stroke", "color"))
                  , { click: function (e, obj) { onLinkClick(e, obj); } }
              );

            ctDiagram.isReadOnly = true;  // Disable the diagram!

            // create the graph by reading the JSON data saved in "mySavedModel" textarea element
            load();
            setDiagramModelFromMetadata();
        }

        // A data binding conversion function. Given an name, return the a geometry path string.
        function geoFunc(geoname) {
            return icons[geoname];
        }

        function setIconPaths() {

            icons.square = "M 20 230 Q 40 205, 50 230 T 90230";

            icons.server = "F M28,15.35V10h-2V8h2V0H0v8h2v2H0v8h2v2H0v8h15.35c1.545,1.248,3.51,1.999,5.65,2    c4.971-0.002,8.998-4.029,9-9C29.999,18.857,29.248,16.895,28,15.35z M2,4h4v2H2V4z M24,8v2H4V8H24z M2,14h4v2H2V14z M6,26H2v-2h4    V26z M12.059,20H4v-2h8.522C12.297,18.639,12.135,19.307,12.059,20z M21,27.883c-3.801-0.009-6.876-3.084-6.885-6.883    c0.009-3.801,3.084-6.876,6.885-6.885c3.799,0.009,6.874,3.084,6.883,6.885C27.874,24.799,24.799,27.874,21,27.883z\
                            M24.092,19.393l1.188-1.187l-1.416-1.415l-1.165,1.166c-0.22-0.123-0.452-0.221-0.697-0.294V16h-2    v1.662c-0.229,0.068-0.446,0.158-0.651,0.27l-1.142-1.14l-1.415,1.415l1.141,1.141C17.82,19.555,17.73,19.771,17.662,20H16v2    h1.662c0.072,0.246,0.172,0.479,0.295,0.698l-1.165,1.163l1.413,1.416l1.188-1.188c0.192,0.102,0.395,0.182,0.605,0.245V26H22    v-1.665c0.229-0.067,0.445-0.158,0.65-0.271l1.213,1.213l1.414-1.416l-1.213-1.211c0.111-0.205,0.201-0.422,0.271-0.65H26v-2.001    h-1.663C24.273,19.787,24.191,19.586,24.092,19.393z M20.999,22.499c-0.829-0.002-1.498-0.671-1.501-1.5    c0.003-0.829,0.672-1.498,1.501-1.501c0.829,0.003,1.498,0.672,1.5,1.501C22.497,21.828,21.828,22.497,20.999,22.499z";

            icons.server3 = "F M269.723,47.545H160.368c-3.844,0-6.962,3.119-6.962,6.965v321.07c0,3.846,3.118,6.965,6.962,6.965h109.355   c3.844,0,6.962-3.119,6.962-6.965V54.51C276.685,50.664,273.567,47.545,269.723,47.545z M215.045,321.378   c-13.439,0-24.333-10.895-24.333-24.333s10.894-24.333,24.333-24.333c13.439,0,24.333,10.895,24.333,24.333   S228.484,321.378,215.045,321.378z M259.798,197.172c0,3.842-3.119,6.962-6.968,6.962h-75.569c-3.849,0-6.968-3.12-6.968-6.962   v-6.962c0-3.855,3.119-6.972,6.968-6.972h75.569c3.849,0,6.968,3.117,6.968,6.972V197.172z M259.798,162.349   c0,3.844-3.119,6.963-6.968,6.963h-75.569c-3.849,0-6.968-3.119-6.968-6.963v-6.972c0-3.844,3.119-6.963,6.968-6.963h75.569   c3.849,0,6.968,3.119,6.968,6.963V162.349z M259.798,127.517c0,3.851-3.119,6.969-6.968,6.969h-75.569   c-3.849,0-6.968-3.117-6.968-6.969v-6.962c0-3.843,3.119-6.962,6.968-6.962h75.569c3.849,0,6.968,3.119,6.968,6.962V127.517z    M259.798,92.696c0,3.843-3.119,6.962-6.968,6.962h-75.569c-3.849,0-6.968-3.119-6.968-6.962v-6.964   c0-3.852,3.119-6.969,6.968-6.969h75.569c3.849,0,6.968,3.117,6.968,6.969V92.696z\
                            M430.09,84.614c0-3.284-2.773-6.202-6.196-6.511c-32.422-2.948-64.846-5.896-97.269-8.834   c-0.357-0.034-1.369-0.005-2.45,0.303l-37.908,9.574v297.806l39.226,5.548c0.477,0.103,1.093,0,1.131-0.002   c32.423-2.946,64.847-6.228,97.27-9.17c3.422-0.314,6.197-3.226,6.197-6.512C430.088,291.084,430.09,160.353,430.09,84.614z    M335.454,105.018c0-3.519,2.773-6.179,6.196-5.939c22.407,1.583,44.813,3.167,67.221,4.75c3.423,0.24,6.195,3.126,6.195,6.455   v6.012c0,3.317-2.772,5.858-6.195,5.665c-22.407-1.282-44.814-2.563-67.221-3.836c-3.422-0.197-6.196-3.214-6.196-6.731V105.018z    M415.066,206.533c0,3.316-2.773,6.046-6.196,6.076c-22.407,0.243-44.814,0.489-67.221,0.729c-3.422,0.034-6.196-2.785-6.196-6.31   v-6.372c0-3.526,2.773-6.37,6.196-6.365c22.406,0.061,44.813,0.132,67.221,0.186c3.423,0.013,6.196,2.71,6.196,6.038V206.533z    M408.87,182.391c-22.407-0.264-44.814-0.526-67.221-0.793c-3.422-0.04-6.196-2.925-6.196-6.452v-6.371   c0-3.525,2.773-6.307,6.196-6.217c22.407,0.562,44.813,1.131,67.221,1.705c3.423,0.084,6.195,2.848,6.195,6.177   c0,2.406,0.001,3.608,0.001,6.014C415.066,179.771,412.293,182.436,408.87,182.391z M415.066,146.376   c0,3.316-2.773,5.912-6.196,5.801c-22.407-0.773-44.814-1.547-67.221-2.318c-3.422-0.115-6.196-3.068-6.196-6.589v-6.377   c0-3.52,2.773-6.235,6.196-6.071c22.407,1.067,44.813,2.147,67.221,3.226c3.423,0.165,6.196,2.983,6.196,6.312V146.376z\
                            M103.467,69.269c-32.424,2.938-64.848,5.886-97.271,8.834c-3.422,0.309-6.195,3.227-6.195,6.511   c0,75.739,0.002,206.471-0.001,282.202c0,3.286,2.774,6.198,6.196,6.512c32.424,2.941,64.848,6.224,97.271,9.17   c0.037,0.002,0.653,0.105,1.131,0.002l39.226-5.548V79.146l-37.908-9.574C104.834,69.264,103.822,69.235,103.467,69.269z    M94.637,207.028c0,3.524-2.773,6.344-6.195,6.31c-22.407-0.239-44.814-0.485-67.222-0.729c-3.422-0.03-6.196-2.76-6.196-6.076   v-6.018c0-3.328,2.773-6.025,6.196-6.038c22.408-0.055,44.815-0.125,67.222-0.186c3.422-0.005,6.195,2.839,6.195,6.365V207.028z    M94.637,175.146c0,3.527-2.773,6.412-6.195,6.452c-22.407,0.267-44.814,0.529-67.222,0.793c-3.422,0.045-6.196-2.62-6.196-5.938   c0-2.405,0.001-3.607,0.001-6.014c0-3.329,2.772-6.093,6.195-6.177c22.408-0.574,44.814-1.144,67.222-1.705   c3.422-0.09,6.195,2.691,6.195,6.217V175.146z M94.637,143.27c0,3.521-2.773,6.474-6.195,6.589   c-22.407,0.771-44.814,1.545-67.222,2.318c-3.422,0.111-6.196-2.484-6.196-5.801v-6.017c0-3.328,2.773-6.146,6.196-6.312   c22.408-1.078,44.814-2.158,67.222-3.226c3.422-0.164,6.195,2.552,6.195,6.071V143.27z M94.637,111.393   c0,3.518-2.773,6.534-6.195,6.731c-22.407,1.273-44.814,2.554-67.222,3.836c-3.422,0.193-6.195-2.348-6.195-5.665v-6.012   c0-3.329,2.772-6.215,6.195-6.455c22.408-1.583,44.814-3.167,67.222-4.75c3.422-0.239,6.195,2.421,6.195,5.939V111.393z";

            icons.UE = "F M21.072,26.604c-0.316,0-0.625-0.02-0.934-0.047v2.104H4.189V3.508h15.949v2.194c0.31-0.027,0.617-0.047,0.935-0.047   c0.203,0,0.404,0.02,0.604,0.029V2.211C21.678,0.994,20.683,0,19.465,0H4.863C3.646,0,2.65,0.994,2.65,2.211v28.331   c0,1.216,0.996,2.212,2.213,2.212h14.602c1.218,0,2.213-0.996,2.213-2.212v-3.969C21.478,26.585,21.275,26.604,21.072,26.604z    M9.829,1.595H14.5c0.148,0,0.268,0.12,0.268,0.271c0,0.148-0.119,0.267-0.268,0.267H9.829c-0.148,0-0.268-0.118-0.268-0.267   C9.561,1.715,9.68,1.595,9.829,1.595z M12.165,31.648c-0.611,0-1.105-0.496-1.105-1.105c0-0.611,0.494-1.104,1.105-1.104   c0.611,0,1.107,0.492,1.107,1.104C13.272,31.152,12.775,31.648,12.165,31.648z M27.555,12.274c0.052,0.064,0.115,0.106,0.183,0.129   l-0.303,0.188l-0.525-0.678l0.084-0.118C27.15,11.994,27.555,12.274,27.555,12.274z M21.072,7.099   c-4.988,0-9.033,4.045-9.033,9.031c0,4.989,4.045,9.031,9.033,9.031c4.988,0,9.031-4.042,9.031-9.031   C30.104,11.144,26.062,7.099,21.072,7.099z M15.775,9.894c0.316,0.475-0.438,0.551-0.438,0.551   c-0.078,0.022-0.156,0.056-0.234,0.096C15.315,10.31,15.542,10.096,15.775,9.894z M16.59,17.796   c-0.283,0.354-0.244,0.714-0.244,0.714c0.363,1.272-0.363,1.272-0.363,1.272c-0.525,0.077-0.322,0.712-0.322,0.712   c0,0.357-0.203,0.639-0.203,0.639c0.203,0.277,0.043,0.598,0.043,0.598c-0.041,0.062-0.059,0.131-0.061,0.199   c-1.549-1.477-2.518-3.559-2.518-5.865c0-0.477,0.043-0.94,0.121-1.396c0.047-0.079,0.076-0.13,0.076-0.13l0.324,0.199   c0.283-0.119,0.441,0.316,0.441,0.316c0.242-0.041,0.324,0.398,0.324,0.398c0.605-0.239,0.725,0.871,0.725,0.871   c0.324,0,0.688,0.396,0.688,0.396c0.604,0,0.725,0.397,0.725,0.397C16.871,17.038,16.59,17.796,16.59,17.796z M16.81,9.509   c-0.052,0.439-0.82,0.385-1.006,0.364c0.322-0.271,0.666-0.521,1.029-0.739L16.81,9.509z M27.957,13.543   c0,0-0.158,0.437-0.643,0.676c0,0-0.686-1.669-1.533-2.026c0,0,0.887,1.55,1.613,2.266c0,0,0.201,0.121,0.523-0.038   c0,0,0.039,1.312-0.728,2.185c0,0-0.199,0.479-0.119,0.992c0,0,0.119,0.875-0.524,1.312c0,0-0.283,0.197-0.283,0.674   c0,0,0,0.396-0.443,0.396c0,0-0.484,1.025-1.855,0.828c0,0,0-0.746-0.399-1.621c0,0-0.365-0.479,0.196-1.033   c0,0,0.527-0.238-0.278-1.151c0,0-0.522-0.438-0.242-0.914c0,0,0.08-0.397-0.12-0.517c0,0-0.562,0.117-0.685-0.277   c0,0-1.05,0.396-1.533,0.198c0,0-0.604,0.396-1.09-0.519c0,0-0.806-0.478-0.521-0.914c0,0,0.08-0.436,0.08-0.873   c0,0,0.08-0.716,0.887-1.072c0,0,0.242-0.717,0.604-0.717c0,0,0.768-0.041,1.172-0.196c0,0,0.523-0.16,0.844-0.08   c0,0,0.203,0.317,0.082,0.516c0,0,0.562-0.196,0.928,0.237c0,0,0.361-0.037,0.279-0.316c0,0,0.931,0.559,1.414,0.239   c0,0,0.119-0.795-0.322-0.756c0,0-0.686,0.04-1.01-0.437c0,0-0.361-0.16-0.283,0.08c0,0,0.043,0.237,0.324,0.316   c0,0-0.08,0.238-0.361,0.119c0,0-0.241-0.08-0.321-0.598c0,0-0.646-0.117-0.81-0.396c0,0-0.399,0.119,0.523,0.559   c0,0,0.365,0.275-0.121,0.476c0,0-0.322-0.158,0.041-0.237c0,0-0.08-0.16-0.443-0.279c0,0-0.239-0.236-0.28-0.396   c0,0-0.481,0.318-0.687,0.119c0,0-0.082,0.396-0.322,0.396c0,0-0.043,0.596-0.848,0.358h-0.244c0,0-0.201-0.556,0.082-0.716   c0,0,0.523,0.119,0.644,0c0.123-0.117,0.202-0.317-0.119-0.396c0,0-0.481-0.123-0.283-0.36c0,0,0.242-0.276,0.484,0.082   c0,0,0.403-0.28,0.926-0.317c0,0,0.931-0.4,0.687-0.679c0,0-0.603,0.358-0.886,0.162c0,0-0.795-0.263-0.147-0.895   c2.803,0.27,5.186,1.969,6.418,4.355c-0.121,0.051-0.287,0.097-0.439,0.059C27.906,12.542,28.424,13.122,27.957,13.543z";

            icons.eNodeB = "F M189.99,192.757c3.646,1.968,8.195,0.605,10.162-3.04c1.967-3.646,0.606-8.195-3.04-10.162   C168.669,164.211,151,134.685,151,102.5c0-48.248,39.252-87.5,87.5-87.5S326,54.252,326,102.5   c0,32.186-17.669,61.711-46.112,77.056c-3.646,1.966-5.006,6.516-3.04,10.162c1.355,2.513,3.939,3.94,6.607,3.94   c1.202,0,2.422-0.29,3.554-0.901C320.312,174.792,341,140.207,341,102.5C341,45.981,295.019,0,238.5,0S136,45.981,136,102.5   C136,140.207,156.688,174.791,189.99,192.757z\
            M265.854,141.301c-3.382,2.392-4.184,7.073-1.792,10.454c1.461,2.066,3.777,3.169,6.129,3.169   c1.498,0,3.009-0.447,4.325-1.377C291.099,141.816,301,122.733,301,102.5c0-34.462-28.038-62.5-62.5-62.5S176,68.038,176,102.5   c0,20.233,9.901,39.316,26.484,51.047c3.38,2.393,8.062,1.59,10.454-1.792c2.392-3.381,1.59-8.062-1.792-10.454   C198.531,132.378,191,117.873,191,102.5c0-26.191,21.309-47.5,47.5-47.5S286,76.309,286,102.5   C286,117.873,278.469,132.378,265.854,141.301z\
            M326.061,380.031c-0.007-0.021-0.015-0.042-0.022-0.064L246,146.25v-22.54c8.729-3.096,15-11.432,15-21.21   c0-12.407-10.093-22.5-22.5-22.5S216,90.093,216,102.5c0,9.778,6.271,18.114,15,21.21v22.542l-28.914,84.428   c-0.022,0.065-0.046,0.129-0.066,0.194l-24.912,72.742c-0.033,0.095-0.069,0.189-0.097,0.284l-39.166,114.364   c-1.342,3.919,0.747,8.184,4.665,9.526c0.805,0.275,1.625,0.406,2.431,0.406c3.117,0,6.029-1.958,7.095-5.072l10.164-29.678   l68.8,39.875V469.5c0,4.142,3.358,7.5,7.5,7.5s7.5-3.358,7.5-7.5v-36.178l68.8-39.876l10.156,29.657   c1.343,3.918,5.606,6.009,9.526,4.665c3.918-1.342,6.007-5.606,4.665-9.525L326.061,380.031z M212.72,245.925L231,261.468v67.753   l-37.867-26.102L212.72,245.925z M246,261.468l18.28-15.542l19.587,57.194L246,329.221V261.468z M259.057,230.676L246,241.778   v-49.23L259.057,230.676z M238.5,95c4.136,0,7.5,3.364,7.5,7.5s-3.364,7.5-7.5,7.5s-7.5-3.364-7.5-7.5S234.364,95,238.5,95z    M231,241.778l-13.057-11.102L231,192.548V241.778z M167.154,378.98l20.932-61.122L231,347.439v68.545L167.154,378.98z    M246,415.985v-68.545l42.914-29.581l20.932,61.121L246,415.985z";

            icons.MME = "F1 M18.435,8.974L11.022,53.65h15.9V1.17L18.435,8.974z M25.362,45.26l-11.973,4.486l0.683-4.682l11.291-4.584V45.26z    M25.362,38.238l-11.12,4.583l0.682-4.682l10.438-4.682V38.238z M25.362,31.216l-10.096,4.388l0.683-4.683l9.413-4.485V31.216z    M25.362,24.289l-8.876,4.585l0.682-4.683l8.193-4.683L25.362,24.289L25.362,24.289z M25.362,17.167l-7.853,4.684l0.683-4.682   l7.17-4.781V17.167z M25.362,10.242l-6.829,4.583l0.975-4.583l5.854-4.78V10.242z M34.628,7.022L27.799,1.17V53.65h15.412L34.628,7.022z M28.776,5.462l5.071,3.609l0.928,4.195l-5.999-3.513V5.462z    M28.776,12.388l5.999,2.902l0.73,4.023l-6.729-2.633V12.388z M28.776,19.313l6.729,2.539l0.924,4.388l-7.653-2.634V19.313z    M28.776,26.238l7.653,2.636l0.98,5.143l-8.633-2.998L28.776,26.238L28.776,26.238z M28.776,33.164l8.876,3.172l0.959,4.793   l-9.834-3.307L28.776,33.164L28.776,33.164z M28.776,40.09l9.835,3.561l1.104,4.472l-10.938-3.277V40.09z M7.608,13.266L4.487,53.65h5.852l0.808-4.976l-5.4-1.415l0.195-2.293l5.533,1.693l0.257-1.585l-5.687-1.651l0.195-2.293   l5.818,1.953l0.259-1.607l-6.015-1.762l0.195-2.293l6.142,2.084l0.265-1.626l-6.271-1.933l0.195-2.294l6.395,2.275l0.269-1.648   l-6.663-2.111l0.196-2.293l6.63,2.415v0.98l1.27-7.81v-9.072L7.608,13.266z M13.8,30.58l-6.533-2.342l0.195-2.294l6.338,2.587   V30.58z M13.948,26.825l-6.354-2.28l0.196-2.293l6.158,2.525V26.825z M14.095,23.069L7.95,20.875l0.195-2.293l5.951,2.439   L14.095,23.069L14.095,23.069z M14.242,19.313L8.096,17.12l0.195-2.294l5.952,2.439V19.313z M49.553,19.02l-7.316,2.926l-1.268,15.802l0.68,3.36l8.15-2.014l0.145,2.658l-7.825,1.676l0.332,1.638l7.59-1.512   l0.236,2.864l-7.345,1.03l1.256,6.2h7.219L49.553,19.02z M42.888,23.536l5.997-2.203l0.105,2.516l-6.266,1.891L42.888,23.536z    M42.562,27.052L49.19,25l0.13,2.258l-6.921,1.996L42.562,27.052z M42.236,30.567l7.086-2.203l0.108,2.387l-7.357,2.019   L42.236,30.567z M41.911,34.083l7.627-2.203l0.088,2.429l-7.878,1.978L41.911,34.083z M41.423,39.801l0.161-2.201l8.042-2.203   l0.173,2.319L41.423,39.801z";

            icons.AntenaENodeB = "F1 M189.99,192.757c3.646,1.968,8.195,0.605,10.162-3.04c1.967-3.646,0.606-8.195-3.04-10.162   C168.669,164.211,151,134.685,151,102.5c0-48.248,39.252-87.5,87.5-87.5S326,54.252,326,102.5   c0,32.186-17.669,61.711-46.112,77.056c-3.646,1.966-5.006,6.516-3.04,10.162c1.355,2.513,3.939,3.94,6.607,3.94   c1.202,0,2.422-0.29,3.554-0.901C320.312,174.792,341,140.207,341,102.5C341,45.981,295.019,0,238.5,0S136,45.981,136,102.5   C136,140.207,156.688,174.791,189.99,192.757z M265.854,141.301c-3.382,2.392-4.184,7.073-1.792,10.454c1.461,2.066,3.777,3.169,6.129,3.169   c1.498,0,3.009-0.447,4.325-1.377C291.099,141.816,301,122.733,301,102.5c0-34.462-28.038-62.5-62.5-62.5S176,68.038,176,102.5   c0,20.233,9.901,39.316,26.484,51.047c3.38,2.393,8.062,1.59,10.454-1.792c2.392-3.381,1.59-8.062-1.792-10.454   C198.531,132.378,191,117.873,191,102.5c0-26.191,21.309-47.5,47.5-47.5S286,76.309,286,102.5   C286,117.873,278.469,132.378,265.854,141.301z M326.061,380.031c-0.007-0.021-0.015-0.042-0.022-0.064L246,146.25v-22.54c8.729-3.096,15-11.432,15-21.21   c0-12.407-10.093-22.5-22.5-22.5S216,90.093,216,102.5c0,9.778,6.271,18.114,15,21.21v22.542l-28.914,84.428   c-0.022,0.065-0.046,0.129-0.066,0.194l-24.912,72.742c-0.033,0.095-0.069,0.189-0.097,0.284l-39.166,114.364   c-1.342,3.919,0.747,8.184,4.665,9.526c0.805,0.275,1.625,0.406,2.431,0.406c3.117,0,6.029-1.958,7.095-5.072l10.164-29.678   l68.8,39.875V469.5c0,4.142,3.358,7.5,7.5,7.5s7.5-3.358,7.5-7.5v-36.178l68.8-39.876l10.156,29.657   c1.343,3.918,5.606,6.009,9.526,4.665c3.918-1.342,6.007-5.606,4.665-9.525L326.061,380.031z M212.72,245.925L231,261.468v67.753   l-37.867-26.102L212.72,245.925z M246,261.468l18.28-15.542l19.587,57.194L246,329.221V261.468z M259.057,230.676L246,241.778   v-49.23L259.057,230.676z M238.5,95c4.136,0,7.5,3.364,7.5,7.5s-3.364,7.5-7.5,7.5s-7.5-3.364-7.5-7.5S234.364,95,238.5,95z    M231,241.778l-13.057-11.102L231,192.548V241.778z M167.154,378.98l20.932-61.122L231,347.439v68.545L167.154,378.98z    M246,415.985v-68.545l42.914-29.581l20.932,61.121L246,415.985z";

            icons.SGW = "F M32.42,0L11.699,2.82v3.111v0.773v3.447l-3.225,1.26v1.968l3.225,1.519v2.452l-3.255,1.754v2.513l3.255,1.51v1.245    l-3.255,1.645v2.511l3.255,1.705v2.588l-3.471,1.354v2.324l3.471,1.941v4.153L28.984,54.82l20.87-9.312V8.769l0.299-0.07V4.812    L32.42,0z M15.547,39.279l-0.013-6.438l3.513,1.571l0.038,6.96L15.547,39.279z M19.046,17.285v5.828l-3.513-1.765v-5.63    L19.046,17.285z M15.534,12.782v-5.63l3.513,1.568v5.83L15.534,12.782z M19.046,25.849v5.827l-3.513-1.765V24.28L19.046,25.849z     M24.861,45.356l-3.487-2.241l0.038-7.283l3.513,1.716L24.861,45.356z M24.924,34.801l-3.513-1.765v-5.632l3.513,1.57V34.801z     M24.924,25.821l-3.513-1.766v-5.63l3.513,1.569V25.821z M24.924,16.84l-3.513-1.766v-5.63l3.513,1.569V16.84z M28.336,9.097    l-13.848-5.38L32.42,1.523l13.948,3.588L28.336,9.097z M30.666,46.721l0.025-35.286l4.285-1.095l0.174,34.344L30.666,46.721z     M37.314,43.976l-0.05-34.333l4.285-1.095l0.075,33.721L37.314,43.976z M48.123,39.778l-4.282,1.594V8.041l4.282-1.097V39.778z";

            icons.PCRF = "F M53.25,11.583V9.327c0-1.067-0.837-2.161-1.87-2.439L35.085,0.222c-0.592-0.241-1.246-0.288-1.866-0.132L13.695,4.987    C12.637,5.129,11.78,6.113,11.78,7.18v1.868l18.199,10.565L53.25,11.583z M28.999,13.618L15.611,6.642    c-0.131-0.067-0.206-0.209-0.189-0.356c0.016-0.146,0.122-0.269,0.265-0.305l17.28-4.466c0.59-0.151,1.215-0.107,1.776,0.129    L48.29,7.348c0.137,0.058,0.225,0.195,0.219,0.343c-0.005,0.148-0.103,0.278-0.245,0.325l-17.361,5.756    C30.273,13.98,29.586,13.924,28.999,13.618z M35.539,53.975l-5.582,2.122L11.916,45.28v10.216c0.157,0.146,16.445,9.968,16.445,9.968    c0.869,0.621,2.366,0.773,3.342,0.34l7.915-3.028l0.163-4.013l-4.262-2.849L35.539,53.975z M15.512,53.131l-1.207-0.842v-4.191    l1.207,0.806V53.131z M20.226,56.114l-1.21-0.847v-4.188l1.21,0.804V56.114z M25.826,59.741l-1.208-0.847v-4.188l1.208,0.803    V59.741z M33.661,61.049L31.9,61.891v-4.953l1.761-0.684V61.049z";

            icons.HSS = "F M38.077,0.402l-24.896,9.799c-3.813,1.142-6.366,3.219-6.366,5.593c0,3.604,5.876,6.525,13.125,6.525   c5.722,0,10.587-1.822,12.381-4.361l10.699-5.672v-1.541l4.456-1.95h2.889l4.944-2.194L43.767,0.684   C42.23-0.104,39.684-0.229,38.077,0.402z M19.523,23.589c-1.302-0.009-2.605-0.104-3.865-0.288v10.124c1.169,0.176,2.458,0.282,3.865,0.295V23.589z M24.222,34.235c-1.165,0.178-2.451,0.289-3.863,0.315v10.33c1.429-0.06,2.715-0.214,3.863-0.435V34.235z M24.222,23.231c-1.254,0.204-2.556,0.321-3.863,0.349v10.133c1.418-0.025,2.707-0.142,3.863-0.326V23.231z M14.823,23.163c-1.375-0.247-2.684-0.599-3.864-1.057v10.081c1.094,0.433,2.378,0.819,3.864,1.096V23.163z M14.823,34.141c-1.472-0.261-2.755-0.623-3.864-1.036v10.538c1.113,0.389,2.396,0.725,3.864,0.953V34.141z M19.208,44.909c0.107,0,0.209-0.004,0.316-0.006V34.555c-1.403-0.012-2.689-0.113-3.865-0.282v10.437    c1.045,0.127,2.174,0.199,3.394,0.199C19.104,44.91,19.156,44.91,19.208,44.909z M28.923,32.992c-1.089,0.435-2.369,0.822-3.864,1.102v10.173c1.544-0.359,2.824-0.834,3.864-1.338V32.992z M10.123,21.755c-1.569-0.716-2.857-1.635-3.689-2.756V29.5c0.676,0.603,1.875,1.511,3.689,2.334V21.755z M10.123,32.772c-1.667-0.711-2.875-1.513-3.689-2.163v10.673c0.83,0.626,2.039,1.386,3.689,2.049V32.772z M28.923,21.933c-1.171,0.492-2.479,0.876-3.864,1.15v10.156c1.518-0.3,2.795-0.712,3.864-1.165V21.933z M47.374,9.946l-3.204,1.393v1.671l-11.14,5.988c-0.757,1.02-1.895,1.869-3.272,2.553v10.14    c1.67-0.824,2.715-1.712,3.272-2.274v1.151c-0.716,0.619-1.778,1.376-3.272,2.065v9.859c2.16-1.218,3.033-2.443,3.05-2.467    c0.055-0.08,0.136-0.129,0.223-0.156v1.186c-0.541,0.58-1.578,1.518-3.272,2.406v12.089c0,0.231-0.187,0.418-0.418,0.418    c-0.23,0-0.417-0.188-0.417-0.418v-11.68c-1.065,0.481-2.346,0.928-3.864,1.262v11.464c0,0.231-0.188,0.418-0.418,0.418    c-0.229,0-0.417-0.187-0.417-0.418V45.3c-1.157,0.212-2.441,0.361-3.863,0.417v11.141c0,0.23-0.188,0.417-0.418,0.417    c-0.231,0-0.417-0.187-0.417-0.417V45.738c-0.104,0.001-0.206,0.005-0.312,0.007c-0.054,0-0.109,0-0.164,0    c-1.215,0-2.341-0.069-3.39-0.19v11.04c0,0.231-0.187,0.418-0.418,0.418c-0.231,0-0.417-0.187-0.417-0.418V45.446    c-1.455-0.215-2.74-0.529-3.864-0.898V55.55c0,0.232-0.187,0.418-0.418,0.418c-0.231,0-0.418-0.188-0.418-0.418V44.252    c-1.576-0.597-2.788-1.289-3.689-1.914v8.176c-1.109,0.751-1.741,1.608-1.741,2.518v2.381c0,2.962,6.656,5.362,14.866,5.362    c8.209,0,14.865-2.4,14.865-5.362v-2.381c0-0.569-0.251-1.116-0.709-1.631l9.394-4.435c0.627-0.296,1.134-0.875,1.134-1.295V44.91    l2.925-1.265h2.297c0.694,0,1.736-0.286,2.33-0.643l3.209-1.917c0.595-0.355,1.076-1.204,1.076-1.896V7.3l-5.709,2.647    L47.374,9.946L47.374,9.946z M42.865,36.904l-8.442,4.456v-2.628l8.442-4.386V36.904z M42.865,32.192l-8.442,4.457v-2.629    l8.442-4.386V32.192z M42.865,27.482l-8.442,4.456V29.31l8.442-4.386V27.482z M42.865,22.77l-8.442,4.456v-2.628l8.442-4.386    V22.77z M42.865,18.057l-8.442,4.456v-2.628l8.442-4.386V18.057z M54.476,30.733l-4.003,2.053h-2.366v-2.227h2.228l4.143-2.194    L54.476,30.733L54.476,30.733z M54.476,26.137l-4.003,2.053h-2.366v-2.228h2.228l4.143-2.192L54.476,26.137L54.476,26.137z     M54.476,21.54l-4.003,2.054h-2.366v-2.228h2.228l4.143-2.193L54.476,21.54L54.476,21.54z M54.476,16.943l-4.003,2.055h-2.366    v-2.229h2.228l4.143-2.193L54.476,16.943L54.476,16.943z M54.476,12.348l-4.003,2.053h-2.366v-2.228h2.228l4.143-2.194    L54.476,12.348L54.476,12.348z";
            //M19.523,23.589c-1.302-0.009-2.605-0.104-3.865-0.288v10.124c1.169,0.176,2.458,0.282,3.865,0.295V23.589z M24.222,34.235c-1.165,0.178-2.451,0.289-3.863,0.315v10.33c1.429-0.06,2.715-0.214,3.863-0.435V34.235z M24.222,23.231c-1.254,0.204-2.556,0.321-3.863,0.349v10.133c1.418-0.025,2.707-0.142,3.863-0.326V23.231z M14.823,23.163c-1.375-0.247-2.684-0.599-3.864-1.057v10.081c1.094,0.433,2.378,0.819,3.864,1.096V23.163z M14.823,34.141c-1.472-0.261-2.755-0.623-3.864-1.036v10.538c1.113,0.389,2.396,0.725,3.864,0.953V34.141z M19.208,44.909c0.107,0,0.209-0.004,0.316-0.006V34.555c-1.403-0.012-2.689-0.113-3.865-0.282v10.437    c1.045,0.127,2.174,0.199,3.394,0.199C19.104,44.91,19.156,44.91,19.208,44.909z M28.923,32.992c-1.089,0.435-2.369,0.822-3.864,1.102v10.173c1.544-0.359,2.824-0.834,3.864-1.338V32.992z M10.123,21.755c-1.569-0.716-2.857-1.635-3.689-2.756V29.5c0.676,0.603,1.875,1.511,3.689,2.334V21.755z M10.123,32.772c-1.667-0.711-2.875-1.513-3.689-2.163v10.673c0.83,0.626,2.039,1.386,3.689,2.049V32.772z M28.923,21.933c-1.171,0.492-2.479,0.876-3.864,1.15v10.156c1.518-0.3,2.795-0.712,3.864-1.165V21.933z M47.374,9.946l-3.204,1.393v1.671l-11.14,5.988c-0.757,1.02-1.895,1.869-3.272,2.553v10.14    c1.67-0.824,2.715-1.712,3.272-2.274v1.151c-0.716,0.619-1.778,1.376-3.272,2.065v9.859c2.16-1.218,3.033-2.443,3.05-2.467    c0.055-0.08,0.136-0.129,0.223-0.156v1.186c-0.541,0.58-1.578,1.518-3.272,2.406v12.089c0,0.231-0.187,0.418-0.418,0.418    c-0.23,0-0.417-0.188-0.417-0.418v-11.68c-1.065,0.481-2.346,0.928-3.864,1.262v11.464c0,0.231-0.188,0.418-0.418,0.418    c-0.229,0-0.417-0.187-0.417-0.418V45.3c-1.157,0.212-2.441,0.361-3.863,0.417v11.141c0,0.23-0.188,0.417-0.418,0.417    c-0.231,0-0.417-0.187-0.417-0.417V45.738c-0.104,0.001-0.206,0.005-0.312,0.007c-0.054,0-0.109,0-0.164,0    c-1.215,0-2.341-0.069-3.39-0.19v11.04c0,0.231-0.187,0.418-0.418,0.418c-0.231,0-0.417-0.187-0.417-0.418V45.446    c-1.455-0.215-2.74-0.529-3.864-0.898V55.55c0,0.232-0.187,0.418-0.418,0.418c-0.231,0-0.418-0.188-0.418-0.418V44.252    c-1.576-0.597-2.788-1.289-3.689-1.914v8.176c-1.109,0.751-1.741,1.608-1.741,2.518v2.381c0,2.962,6.656,5.362,14.866,5.362    c8.209,0,14.865-2.4,14.865-5.362v-2.381c0-0.569-0.251-1.116-0.709-1.631l9.394-4.435c0.627-0.296,1.134-0.875,1.134-1.295V44.91    l2.925-1.265h2.297c0.694,0,1.736-0.286,2.33-0.643l3.209-1.917c0.595-0.355,1.076-1.204,1.076-1.896V7.3l-5.709,2.647    L47.374,9.946L47.374,9.946z M42.865,36.904l-8.442,4.456v-2.628l8.442-4.386V36.904z M42.865,32.192l-8.442,4.457v-2.629    l8.442-4.386V32.192z M42.865,27.482l-8.442,4.456V29.31l8.442-4.386V27.482z M42.865,22.77l-8.442,4.456v-2.628l8.442-4.386    V22.77z M42.865,18.057l-8.442,4.456v-2.628l8.442-4.386V18.057z M54.476,30.733l-4.003,2.053h-2.366v-2.227h2.228l4.143-2.194    L54.476,30.733L54.476,30.733z M54.476,26.137l-4.003,2.053h-2.366v-2.228h2.228l4.143-2.192L54.476,26.137L54.476,26.137z     M54.476,21.54l-4.003,2.054h-2.366v-2.228h2.228l4.143-2.193L54.476,21.54L54.476,21.54z M54.476,16.943l-4.003,2.055h-2.366    v-2.229h2.228l4.143-2.193L54.476,16.943L54.476,16.943z M54.476,12.348l-4.003,2.053h-2.366v-2.228h2.228l4.143-2.194    L54.476,12.348L54.476,12.348z";

            icons.IMS = "F M13.885,25.765 0.002,18.356 0,20.249 13.885,28.23 32,17.818 32,16.119 13.885,25.758z M13.256,24.774l-0.017-14.23L0.674,7.141L0.69,18.229L13.256,24.774z M9.179,11.736l3.229,1.02v0.987l-3.229-1.077V11.736    z M9.179,13.487l3.229,1.126V15.6l-3.229-1.183V13.487z M9.179,15.063l3.229,1.222v0.988l-3.229-1.278V15.063z M5.179,10.472    l3.112,0.983v0.915l-3.112-1.037V10.472z M5.179,12.091l3.112,1.086v0.915l-3.112-1.14V12.091z M5.179,13.55l3.112,1.178v0.915    l-3.112-1.231V13.55z M1.738,9.385l2.369,0.749v0.842l-2.369-0.79V9.385z M1.738,10.892l2.369,0.826v0.843l-2.369-0.868V10.892z     M1.738,12.249l2.369,0.896v0.843l-2.369-0.939V12.249z M23.553,6.395v1.6l-9.668,2.619v14.488l15.139-7.885v-4.093L32,11.857v-7.47L23.553,6.395z M18.591,20.32l-3.383,1.614    v-1.945l3.383-1.498V20.32z M18.591,17.825l-3.383,1.455v-1.945l3.383-1.339V17.825z M18.591,15.281l-3.383,1.294V14.63    l3.383-1.178V15.281z M18.591,12.666l-3.383,1.128v-1.945l3.383-1.012V12.666z M26.031,17.838l-1.658,0.828v-1.407l1.658-0.78    V17.838z M26.031,15.584l-1.658,0.748v-1.408l1.658-0.699V15.584z M26.031,13.049l-1.658,0.656v-1.408l1.658-0.606V13.049z     M26.031,10.795l-1.658,0.575V9.962l1.658-0.525V10.795z M26.031,8.682l-1.658,0.499V7.773l1.658-0.449V8.682z M27.941,16.881    l-1.521,0.762v-1.348l1.521-0.716V16.881z M27.941,14.722l-1.521,0.686v-1.347l1.521-0.641V14.722z M27.941,12.293l-1.521,0.602    v-1.348l1.521-0.557V12.293z M27.941,10.133l-1.521,0.527V9.313l1.521-0.481V10.133z M27.941,8.109l-1.521,0.456V7.218    l1.521-0.412V8.109z M29.673,11.608l-1.401,0.555v-1.292l1.401-0.514V11.608z M29.673,9.534l-1.401,0.485V8.727l1.401-0.444V9.534    z M29.673,7.588l-1.401,0.421V6.717l1.401-0.38V7.588z M31.301,10.964l-1.294,0.512v-1.241l1.294-0.474V10.964z M31.301,8.969    l-1.294,0.448v-1.24l1.294-0.41V8.969z M31.301,7.099l-1.294,0.389v-1.24l1.294-0.351V7.099z M19.65,8.683 19.65,8.7 21.072,8.324 21.076,8.323 21.076,8.323 23.287,7.739 23.287,7.201 19.65,6.537     19.65,6.544 11.299,5.041 0.883,6.778 13.662,10.197z M31.648,4.273 27.577,3.77 19.654,5.354 19.654,5.589 23.343,6.207z M23.303,7.004 23.299,6.434 19.65,5.813 19.654,6.35z";

            icons.PDN = "F M210.76,56.021c-4.179,0-8.147,1.515-11.711,4.366c-7.752-28.314-22.638-45.786-40.071-45.786c-0.53,0-72.449,0-72.449,0  c-22.881,0-41.304,30.75-44.983,74.016c-2.229,0.179-4.539,0.321-6.174,0.321C15.206,88.938,0,117.973,0,156.477  c0,38.503,15.206,67.538,35.371,67.538c34.355,0,70.713-0.078,70.713-0.078c2.059,0.175,3.752,0.125,5.619-1.006  c14.767-8.936,34.673-20.763,53.924-32.199c20.782-12.346,40.411-24.007,49.897-29.861c0.17-0.105,0.335-0.217,0.496-0.334  c10.923-8.009,22.595-26.182,22.595-53.166C238.615,78.096,226.64,56.021,210.76,56.021z M86.528,29.601  c8.63,0,29.136,0.024,46.516,0.069c-10.173,13.367-17.221,34.688-19.167,60.174c-2.255-0.681-4.316-0.906-6.057-0.906  c-0.697,0-41.24,0.049-51.24,0.033C59.862,53.173,74.187,29.601,86.528,29.601z M15,156.477c0-32.072,12.065-52.538,20.371-52.539  l49.661,0.078c-7.782,12.186-12.583,30.828-12.583,52.461c0,21.929,4.937,40.774,12.908,52.946  c-13.575-0.2-31.994-0.408-49.986-0.408C27.065,209.015,15,188.548,15,156.477z M207.375,148.272  c-9.482,5.844-28.882,17.368-49.409,29.564c-18.331,10.89-37.254,22.132-51.811,30.921c-8.16-2.455-18.706-22.296-18.706-52.28  c0-21.39,7.403-52.448,21.485-52.423c2.479,0.497,4.73,2.532,6.263,4.278c2.054,2.342,5.341,3.172,8.263,2.079  c2.919-1.09,4.871-3.872,4.875-6.987c0.082-61.033,19.749-74.033,30.809-73.813c12.082,0.24,24.403,21.809,28.711,50.438  c0.505,3.353,3.196,5.95,6.564,6.335c3.379,0.388,6.578-1.538,7.825-4.689c2.905-7.334,6.45-10.674,8.516-10.674  c4.532,0,12.855,13.801,12.855,36.35C223.615,128.564,214.919,142.594,207.375,148.272z";

            icons.cylinder = "F1 M 38,19C 47.3888,19 55,21.0147 55,23.5038L 55,25.5C 55,27.9853 47.3888,30 38,30C 28.6112,30 21,27.9853 21,25.5L 21,23.5C 21,21.0147 28.6112,19 38,19 Z M 55,52.5C 55,54.9853 47.3888,57 38,57C 28.6112,57 21,54.9853 21,52.5L 21,46.5C 21,48.9853 28.6112,51 38,51C 47.384,51 54.9921,48.9874 55,46.5039L 55,52.5 Z M 55,43.5C 55,45.9853 47.3888,48 38,48C 28.6112,48 21,45.9853 21,43.5L 21,37.5C 21,39.9853 28.6112,42 38,42C 47.384,42 54.9921,39.9874 55,37.5038L 55,43.5 Z M 55,34.5C 55,36.9853 47.3888,39 38,39C 28.6112,39 21,36.9853 21,34.5L 21,28.5C 21,30.9853 28.6112,33 38,33C 47.384,33 54.9921,30.9874 55,28.5038L 55,34.5 Z ";
            "F M190.761,109.999c-3.576-9.132-8.076-22.535,7.609-37.755c0.646,13.375,14.067,13.99,11.351,36.794\
      c6.231-2.137,6.231-2.137,9.188-3.781c17.285-9.612,20.39-25.205,7.64-42.896c-7.316-10.153-11.945-20.58-10.927-33.23\
      c-4.207,4.269-5.394,9.444-6.744,17.129c-5.116-3.688,3.067-41.28-22.595-46.26c5.362,13.836,7.564,25.758-2.607,40.076\
      c-0.667-5.422-3.255-12.263-8.834-17.183c-0.945,16.386,0.97,23.368-9.507,44.682c-2.945,8.902-5.02,17.635,0.533,26.418\
      C171.354,102.673,180.555,108.205,190.761,109.999z\
      M330.738,371.614h-15.835v-61.829l-74.409-78.541v-21.516c0-6.073-4.477-11.087-10.309-11.957v-82.156h-63.632v82.156\
      c-5.831,0.869-10.308,5.883-10.308,11.957v21.516l-74.409,78.541v61.829H66l-25.124,25.123h314.984L330.738,371.614z\
      M166.554,371.614h-61.717v-29.782h61.717V371.614z M166.554,319.956h-61.717v-1.007l51.471-54.329\
      c0.555,5.513,4.813,9.919,10.246,10.729V319.956L166.554,319.956z M291.903,371.614h-61.718v-29.782h61.718V371.614z\
      M291.903,319.956h-61.718V275.35c5.435-0.811,9.691-5.217,10.246-10.729l51.472,54.329V319.956z";

            icons.cloud = "F M457.088,237.15C447.525,189.337,405.45,153,353.812,153c-17.213,0-32.513,3.825-45.9,11.475   c-22.949-42.075-66.937-68.85-116.662-68.85c-74.587,0-133.875,59.288-133.875,133.875c0,1.913,0,5.737,0,7.65   C22.95,252.45,0,284.963,0,325.125c0,53.55,42.075,95.625,95.625,95.625H420.75c53.55,0,95.625-42.075,95.625-95.625   C516.375,284.963,491.513,250.537,457.088,237.15z";

        }


        function ensureLifelineHeights(e) {
            // iterate over all Activities (ignore Groups)
            var arr = ctDiagram.model.nodeDataArray;
            var max = -1;
            for (var i = 0; i < arr.length; i++) {
                var act = arr[i];
                if (act.isGroup) continue;
                max = Math.max(max, act.start + act.duration);
            }
            if (max > 0) {
                // now iterate over only Groups
                for (var i = 0; i < arr.length; i++) {
                    var gr = arr[i];
                    if (!gr.isGroup) continue;
                    if (max > gr.duration) {  // this only extends, never shrinks
                        ctDiagram.model.setDataProperty(gr, "duration", max);
                    }
                }
            }
        }
        // some parameters
        var LinePrefix = 20;  // vertical starting point in document for all Messages and Activations
        var LineSuffix = 30;  // vertical length beyond the last message time
        var MessageSpacing = 20;  // vertical distance between Messages at different steps
        var ActivityWidth = 10;  // width of each vertical activity bar
        var ActivityStart = 5;  // height before start message time
        var ActivityEnd = 5;  // height beyond end message time
        function computeLifelineHeight(duration) {
            return LinePrefix + duration * MessageSpacing + LineSuffix;
        }
        function computeActivityLocation(act) {
            var groupdata = ctDiagram.model.findNodeDataForKey(act.group);
            if (groupdata === null) return new go.Point();
            // get location of Lifeline's starting point
            var grouploc = go.Point.parse(groupdata.loc);
            return new go.Point(grouploc.x, convertTimeToY(act.start) - ActivityStart);
        }
        function backComputeActivityLocation(loc, act) {
            ctDiagram.model.setDataProperty(act, "start", convertYToTime(loc.y + ActivityStart));
        }
        function computeActivityHeight(duration) {
            return ActivityStart + duration * MessageSpacing + ActivityEnd;
        }
        function backComputeActivityHeight(height) {
            return (height - ActivityStart - ActivityEnd) / MessageSpacing;
        }
        // time is just an abstract small non-negative integer
        // here we map between an abstract time and a vertical position
        function convertTimeToY(t) {
            return t * MessageSpacing + LinePrefix;
        }
        function convertYToTime(y) {
            return (y - LinePrefix) / MessageSpacing;
        }
        // a custom routed Link
        function MessageLink() {
            go.Link.call(this);
            this.time = 0;  // use this "time" value when this is the temporaryLink
        }
        go.Diagram.inherit(MessageLink, go.Link);
        /** @override */
        MessageLink.prototype.getLinkPoint = function (node, port, spot, from, ortho, othernode, otherport) {
            var p = port.getDocumentPoint(go.Spot.Center);
            var r = new go.Rect(port.getDocumentPoint(go.Spot.TopLeft),
                                port.getDocumentPoint(go.Spot.BottomRight));
            var op = otherport.getDocumentPoint(go.Spot.Center);
            var data = this.data;
            var time = data !== null ? data.time : this.time;  // if not bound, assume this has its own "time" property
            var aw = this.findActivityWidth(node, time);
            var x = (op.x > p.x ? p.x + aw / 2 : p.x - aw / 2);
            var y = convertTimeToY(time);
            return new go.Point(x, y);
        };
        MessageLink.prototype.findActivityWidth = function (node, time) {
            var aw = ActivityWidth;
            if (node instanceof go.Group) {
                // see if there is an Activity Node at this point -- if not, connect the link directly with the Group's lifeline
                if (!node.memberParts.any(function (mem) {
                        var act = mem.data;
                        return (act !== null && act.start <= time && time <= act.start + act.duration);
                })) {
                    aw = 0;
                }
            }
            return aw;
        };
        /** @override */
        MessageLink.prototype.getLinkDirection = function (node, port, linkpoint, spot, from, ortho, othernode, otherport) {
            var p = port.getDocumentPoint(go.Spot.Center);
            var op = otherport.getDocumentPoint(go.Spot.Center);
            var right = op.x > p.x;
            return right ? 0 : 180;
        };
        /** @override */
        MessageLink.prototype.computePoints = function () {
            if (this.fromNode === this.toNode) {  // also handle a reflexive link as a simple orthogonal loop
                var data = this.data;
                var time = data !== null ? data.time : this.time;  // if not bound, assume this has its own "time" property
                var p = this.fromNode.port.getDocumentPoint(go.Spot.Center);
                var aw = this.findActivityWidth(this.fromNode, time);
                var x = p.x + aw / 2;
                var y = convertTimeToY(time);
                this.clearPoints();
                this.addPoint(new go.Point(x, y));
                this.addPoint(new go.Point(x + 50, y));
                this.addPoint(new go.Point(x + 50, y + 5));
                this.addPoint(new go.Point(x, y + 5));
                return true;
            } else {
                return go.Link.prototype.computePoints.call(this);
            }
        }
        // end MessageLink
        // a custom LinkingTool that fixes the "time" (i.e. the Y coordinate)
        // for both the temporaryLink and the actual newly created Link
        function MessagingTool() {
            go.LinkingTool.call(this);
            var $ = go.GraphObject.make;
            this.temporaryLink =
              $(MessageLink,
                $(go.Shape, "Rectangle",
                  { stroke: "magenta", strokeWidth: 2 }),
                $(go.Shape,
                  { toArrow: "OpenTriangle", stroke: "magenta" }));
        };
        go.Diagram.inherit(MessagingTool, go.LinkingTool);
        /** @override */
        MessagingTool.prototype.doActivate = function () {
            go.LinkingTool.prototype.doActivate.call(this);
            var time = convertYToTime(this.diagram.firstInput.documentPoint.y);
            this.temporaryLink.time = Math.ceil(time);  // round up to an integer value
        };
        /** @override */
        MessagingTool.prototype.insertLink = function (fromnode, fromport, tonode, toport) {
            var newlink = go.LinkingTool.prototype.insertLink.call(this, fromnode, fromport, tonode, toport);
            if (newlink !== null) {
                var model = this.diagram.model;
                // specify the time of the message
                var start = this.temporaryLink.time;
                var duration = 1;
                newlink.data.time = start;
                model.setDataProperty(newlink.data, "text", "msg");
                // and create a new Activity node data in the "to" group data
                var newact = {
                    group: newlink.data.to,
                    start: start,
                    duration: duration
                };
                model.addNodeData(newact);
                // now make sure all Lifelines are long enough
                ensureLifelineHeights();
            }
            return newlink;
        };
        // end MessagingTool



        ////////////// END : Call Flow Diagram Starts  ////////////////////////

        function onLinkClick(e, obj) {
            //alert(obj.part.data);
            setCTMGridOptions(obj);
            showCTMPopup();
        }

        $scope.kCTMWindowOptions = {
            title: "Call Trace Messages",
            modal: true,
            visible: false,
            //resizable: false,
            //width: 650,
            //height: 450,
            //maxHeight: 800,
            //scrollable: false,
            //position: {
            //    top: 250, // or "100px"
            //    left: "15%"
            //},
            minHeight: 100,
            minWidth: 300,
            maxHeight: 900,
            maxWidth: 1200
        };

        function showCTMPopup() {
            try {
                var element = $("#CTMessageWindow");
                if (element == null) {
                    alert("element is null");
                    return;
                }
                var kWindow = element.data("kendoWindow");
                if (kWindow == null) {
                    alert("kWindow is null");
                    return;
                }
                kWindow.center().open();
                //kWindow.open();
            }
            catch (e) {
                alert(e);
            }
            finally {
            }
        };

        $scope.addNote = function () {
            //alert("addnote");
            swal({
                title: "Add a note below",
                text: "",
                type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Add a note"
            },
                function (inputValue) {
                    if (inputValue === false) return false;
                    if (inputValue === "") {
                        swal.showInputError("You need to write something!");
                        return false
                    } swal("Note Saved!", "You wrote: " + inputValue, "success");
                });
        }

        $scope.createReport = function () {
            swal({
                title: "Crete Analysis report",
                text: "Submit to generate report",
                type: "info",
                showCancelButton: true,
                closeOnConfirm: false,
                showLoaderOnConfirm: true,
            }, function () {
                setTimeout(function () {
                    swal("Analysis report completed!");
                }, 2000);
            });
        }

        $scope.email = function () {
            swal({
                title: "Please enter email address",
                text: "", type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Email Address"
            }, function (inputValue) {
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                } swal("Email sent to :", " " + inputValue, "success");
            });
        }

        $scope.updateRemedy = function () {
            swal({
                title: "Please enter Remedy ticket number",
                text: "", type: "input",
                showCancelButton: true,
                closeOnConfirm: false,
                animation: "slide-from-top",
                inputPlaceholder: "Remedy ticket number"
            }, function (inputValue) {
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to write something!");
                    return false
                } swal("Opening remedy ticket number!", " " + inputValue, "success");
            });
        }


        function setCTMGridOptions(linkObj) {
            try {
                //callTraceData[0]
                //linkObj.part.data
                var data = $.grep($scope.callTraceModel.messages, function (e) { return e.Message.trim().toLowerCase() == linkObj.part.data.text.trim().toLowerCase() });

                var options = jQuery.extend(true, {}, commonService.gridOptions);
                var columns = [
                    { field: "Name", title: "Name", editable: false,headerAttributes: { style: "text-align: center; font-size: 12px;" }, attributes: {style: "font-size: 10px"} },
                    { field: "Value", title: "Value", editable: false, headerAttributes: { style: "text-align: center; font-size: 12px;" }, attributes: { style: "font-size: 10px" } }
                ]

                options.columns = columns;
                var reportDataSource = new kendo.data.DataSource({
                    data: data,
                    //pageSize: 10, //commonService.pageSize
                });

                options.sortable = true;
                options.filterable = true;
                options.resizable = false;
                options.reorderable = false;
                options.groupable = false;
                options.pageable = false;
                options.scrollable = false;
                options.selectable = "row";
                options.dataSource = reportDataSource;
                //options.dataBound = function (e) {
                //    var items = this._data;
                //    var tableRows = $(this.table).find("tr");
                //    tableRows.each(function (index) {
                //        var row = $(this);
                //        var Item = items[index];
                //        if (Item.Color == undefined || Item.Color == "" || Item.Color == null) {
                //        } else {
                //            row.addClass("highlightrow");
                //        }
                //    });
                //};

                options.dataBound= function () {
                    var dataView = this.dataSource.view();
                    for (var i = 0; i < dataView.length; i++) {
                        if (dataView[i].Color!= null) {
                            var uid = dataView[i].uid;
                            $("#ctmGrid tbody").find("tr[data-uid=" + uid + "]").addClass("highlightrow");  
                        }
                    }
                }

                $scope.CTMgridOptions = options;
            } catch (e) {
                alert(e);
            }
        }

        function loadCallTraceSampleData() {
            callTraceData = [];
            callTraceData = $localStorage.callTraceData;

            //callTraceData.push(
            //        {
            //            id: "test",
            //            info: {
            //                date: "Jun-07-2016",
            //                startTime: "6:03:38 PM",
            //                endTime: "6:03:53 PM",
            //                IMSI: "334020105977001",
            //                MSISDN: "5536705400",
            //                IMEI: "357746081165100",
            //                errorDomain: "Others- MSC/PSTN",
            //                CCProtocol: "SIP",
            //                problemSignature: "500",
            //                cell: "PU5800A001",
            //                originatingNode: "MSC",
            //                vendor: "Huawei",
            //            },

            //            description: {
            //                problemSignature: "",
            //                problemDescription: "",
            //                posibleReason : ""
            //            },

            //            action :
            //                {
            //                    suggestion : ""
            //                },

            //            diagramJSON: [
            //                { "Source": "UE", "Destination": "eNB", "Message": "RRC Connection Request" },
            //                { "Source": "eNB", "Destination": "UE", "Message": "RRC Connection Setup" }
            //            ],
            //            messagesOLD: [
            //                        {
            //                            name: "ACK",
            //                            attributes: [
            //                                            { "Name": "r-uri", "Value": "sip:lucentNGFS-192375@stas-tas1.isc-vip-008.solktxes-tas-1.solktxes-3. tcims.com:5060" },
            //                                            { "Name": "r-uri.user", "Value": "lucentNGFS-192375" }
            //                            ]
            //                        }
            //            ],
            //            messages: [
            //                                                { "Message": "ACK ", "Name": "Method", "Value": "ACK" },
            //                                                { "Message": "ACK ", "Name": "r-uri", "Value": "sip:lucentNGFS-192375@stas-tas1.isc-vip-008.solktxes-tas-1.solktxes-3. tcims.com:5060" },
            //                                                { "Message": "Authentication Authorization Request", "Name": "hopbyhopid", "Value": "83953606" },
            //                                                { "Message": "Authentication Authorization Request", "Name": "endtoendid", "Value": "940560774" },
            //                                                { "Message": "BYE ", "Name": "Source IP address", "Value": "2001:4888:203:3f15:c0:104:0:61" },
            //                                                { "Message": "BYE ", "Name": "destination IP address", "Value": "2001:4888:203:ff45:c0:113:0:26" },

            //            ]
            //        }
            //    );
        }
    });
}());